USE DATABASE SNOWFLAKE_SAMPLE_DATA;
USE SCHEMA SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL;

SELECT * FROM CALL_CENTER LIMIT 500;

-- Date functions --
SELECT
    CC_REC_START_DATE,
    YEAR(CC_REC_START_DATE) YEARS,
    MONTHNAME(CC_REC_START_DATE) MONTH,
    DAYOFMONTH(CC_REC_START_DATE) DAY,

    DATE_PART(HOUR, CC_REC_START_DATE) HOUR -- DATE_PART is used to extract hour, min, sec etc from date column
FROM CALL_CENTER;

-- Time difference between dates
USE DATABASE WORKFORCE_DATA_ANALYTICS;
USE SCHEMA WORKFORCE_DATA_ANALYTICS.PUBLIC;
SELECT * FROM REVELIO_INDIVIDUAL_POSITION LIMIT 100;

SELECT
    STARTDATE,
    ENDDATE,
    DATEDIFF(MONTH, STARTDATE, ENDDATE) AS MONTH_DIFF, // TIMEDIFF can be used here too
    DATEDIFF(YEAR, STARTDATE, ENDDATE) AS YEAR_DIFF
FROM REVELIO_INDIVIDUAL_POSITION
WHERE ENDDATE IS NOT NULL
ORDER BY YEAR_DIFF DESC
LIMIT 1000;

-- Adding/Subtracting date
SELECT
    STARTDATE,
    DATEADD(MONTH, +1, STARTDATE) AS ONE_MONTH_INCREASE, // can use TIMEADD/TIMESTAMPADD
    DATEADD(YEAR, -1, STARTDATE) AS ONE_YEAR_DECREASE
FROM REVELIO_INDIVIDUAL_POSITION LIMIT 1000;


-- Round Functions --
SELECT
    SALARY,
    ROUND(SALARY) SALARY_NO_DECIMAL,
    ROUND(SALARY, 1) SALARY_ONEDECIMAL,
    ROUND(SALARY, -1) SALARY_ONEPLACE,
    CEIL(SALARY) AS SALARY_CEIL_NODECIMAL,
    FLOOR(SALARY) AS SALARY_FLOOR_NODECIMAL
FROM REVELIO_INDIVIDUAL_POSITION
LIMIT 100;

-- DIV0 --
// Performs division like the division operator (/),
// but returns 0 when the divisor is 0 (rather than reporting an error).
SELECT 1/2;

SELECT
    CC_DIVISION,
    CC_TAX_PERCENTAGE,
    // CC_DIVISION/CALL_CENTER.CC_TAX_PERCENTAGE AS ANY_RANDOM -- It will give you error of `Divison by zero`
    DIV0(CC_DIVISION, CC_TAX_PERCENTAGE) AS ANY_RANDOM
FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.CALL_CENTER
LIMIT 100;

-- CASE statement --
select CC_COMPANY_NAME, count(CC_COMPANY_NAME) from SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.CALL_CENTER group by CC_COMPANY_NAME;

SELECT
    CC_COMPANY_NAME,
    CASE CC_COMPANY_NAME
        WHEN 'cally' THEN 'C'
        WHEN 'ought' THEN 'O'
        WHEN 'able' THEN 'A'
        WHEN 'pri' THEN 'P'
        WHEN 'ese' THEN 'E'
    ELSE 'AN'
    END AS COMPANY
FROM SNOWFLAKE_SAMPLE_DATA.TPCDS_SF100TCL.CALL_CENTER
LIMIT 500;

-- Greatest and Least
SELECT
    WORK_LIFE_BALANCE_SENTIMENT,
    MENTORSHIP_SENTIMENT,
    GREATEST(WORK_LIFE_BALANCE_SENTIMENT, MENTORSHIP_SENTIMENT), //“greatest” or largest value in a set of values that you provide to it.
    LEAST(WORK_LIFE_BALANCE_SENTIMENT, MENTORSHIP_SENTIMENT) //“least” or smallest value in a set of values that you provide to it.
FROM WORKFORCE_DATA_ANALYTICS.PUBLIC.REVELIO_SENTIMENT_SCORES
LIMIT 100;